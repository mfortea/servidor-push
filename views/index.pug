head
    title Servidor de Notificaciones Push
    style
      include ../css/style.css
      include ../css/all.css
      include ../css/bootstrap.min.css
    <meta name="viewport" content="width=device-width, initial-scale=1">
body
    div.container
        br 
        br
        h1 Servidor de notificaciones Push 
        br
        form(action="/", method="POST")
            div(class="form-group")
                input(type="text", class="form-control", placeholder="Titulo", name="title")

            div(class="form-group")        
                input(type="text", class="form-control", placeholder="Mensaje", name="body")

            div(class="form-group")        
                input(type="text", class="form-control", placeholder="Imagen", name="icon")

            div(class="form-group")        
                input(type="text", class="form-control", placeholder="Badge", name="badge")

            div(class="form-group")        
                input(type="text", class="form-control", placeholder="URL del action", name="action_url")

            div(class="form-group")        
                input(type="text", class="form-control", placeholder="Titulo del action", name="action_title")

            div(class="form-group")        
                input(type="text", class="form-control", placeholder="Icono del action", name="action_icon")  
            br
            button(type="submit", class="boton") Enviar notificación

        p(class="mt-5 mb-3 text-muted") Developed by <a class="text-muted" href="https://github.com/mfortea">@mfortea</a>

script.
        // Comprobación y muestra de notificaciones
        window.addEventListener('load', async () => { 
            if (!'serviceWorker' in navigator) {
                console.log('Service Worker NO SOPORTADO')
                return
            }
            console.log('Service Worker es soportado');

            const sw = await navigator.serviceWorker.register('/sw.js');
            await subscribe();

            console.log('Listo para recibir notificaciones push')
        })
        
        // Suscripción
        const subscribe = async () => {
            const serviceWorker = await navigator.serviceWorker.ready; 
            const subscription = await serviceWorker.pushManager.getSubscription(); 

            if (!subscription) {
                console.log('Suscribíendose....');
                const push = await serviceWorker.pushManager.subscribe({ 
                    userVisibleOnly: true,
                    applicationServerKey: "LA_CLAVE_PÚBLICA_VA_AQUÍ"
                })
                console.log('Suscrito correctamente!. ', push);

                await sendToServer(push);
            }
        }

        // Persistencia    
        const sendToServer = async subData => {
            console.log('Guardando en el servidor...');
            await fetch("/subscribe", {
                method: "POST",
                headers: {
                    'content-type': 'application/json'
                },
                body: JSON.stringify({ sub: subData })
            });
        }